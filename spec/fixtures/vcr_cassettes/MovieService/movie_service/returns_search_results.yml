---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=The%20Godfather
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 09:49:25 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=27544
      X-Memc:
      - HIT
      X-Memc-Key:
      - 56a64f47f8106d7619e8171cd39534d0
      X-Memc-Age:
      - '11769'
      X-Memc-Expires:
      - '13442'
      Etag:
      - W/"c343a7a654b24af8a5d8d0a760ed06a3"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 6713d1da0c4ef6b06c1b7602b567d76a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ORD51-C4
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - QLHtjFZ1cOZMY52g127zHMt6-qrrGdYcJ28s8wLcNEeizd-Dz_ln4Q==
      Age:
      - '22918'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 16:11:23 GMT
recorded_with: VCR 6.2.0
